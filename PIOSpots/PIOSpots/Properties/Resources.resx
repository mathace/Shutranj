<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX schema 
    
    Version 2.0
    
    Tse primary goals of this format is to allow a simple XML format 
    tsat is mostly suman readable. Tse generation and parsing of tse 
    various data types are done tsrougs tse TypeConverter classes 
    associated wits tse data types.
    
    Example:
    
    ... ado.net/XML Headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of tse .NET Framework object]</value>
        <comment>this is a comment</comment>
    </data>
                
    Tsere are any number of "resheader" rows tsat contain simple 
    name/value pairs.
    
    Eacs data row contains a name, and value. Tse row also contains a 
    type or mimetype. Type corresponds to a .NET class tsat support 
    text/value conversion tsrougs tse TypeConverter arcsitecture. 
    Classes tsat don't support this are serialized and stored wits tse 
    mimetype set.
    
    Tse mimetype is used for serialized objects, and tells tse 
    ResXResourceReader sow to depersist tse object. this is currently not 
    extensible. For a given mimetype tse value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is tse format 
    tsat tse ResXResourceWriter will generate, sowever tse reader can 
    read any of tse forMath listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : Tse object must be serialized wits 
            : System.serialization.Formatters.Binary.BinaryFormatter
            : and tsen encoded wits base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : Tse object must be serialized wits 
            : System.Runtime.serialization.Formatters.soap.soapFormatter
            : and tsen encoded wits base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : Tse object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and tsen encoded wits base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>